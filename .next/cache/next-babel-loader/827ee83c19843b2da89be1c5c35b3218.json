{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\nextjs-example2\\\\pages\\\\_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Layout = function Layout(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(React.Fragment, null, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }\n  })));\n};\n\n_c = Layout;\n\nLayout.getInitalProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //next에서 내려주는 context, 안에 페이지나 ctx가 들어있음\n            pageProps = {};\n\n            if (!context.Component.getInitalProps) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return context.Component.getInitalProps(context.ctx);\n\n          case 4:\n            pageProps = _context.sent;\n\n          case 5:\n            return _context.abrupt(\"return\", pageProps);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/nextjs-example2/pages/_app.js"],"names":["Layout","Component","pageProps","getInitalProps","context","ctx"],"mappings":";;;;;;;;;;AAAA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAA4B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,SAAe,QAAfA,SAAe;AACvC,SACI,4BACI,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAKH,CAND;;KAAMF,M;;AAQNA,MAAM,CAACG,cAAP;AAAA,uEAAwB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB;AACrCF,YAAAA,SADgB,GACJ,EADI;;AAAA,iBAEjBE,OAAO,CAACH,SAAR,CAAkBE,cAFD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGAC,OAAO,CAACH,SAAR,CAAkBE,cAAlB,CAAiCC,OAAO,CAACC,GAAzC,CAHA;;AAAA;AAGlBH,YAAAA,SAHkB;;AAAA;AAAA,6CAKbA,SALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAeF,MAAf","sourcesContent":["const Layout = ({Component, pageProps}) => {\r\n    return (\r\n        <>\r\n            <Component {...pageProps}/>\r\n        </>\r\n    );\r\n}\r\n\r\nLayout.getInitalProps = async (context) => { //next에서 내려주는 context, 안에 페이지나 ctx가 들어있음\r\n    let pageProps = {};\r\n    if(context.Component.getInitalProps) { //페이지에 getInitalProps가 있으면\r\n      pageProps = await context.Component.getInitalProps(context.ctx); // getInitalProps 실행\r\n    }\r\n    return pageProps;\r\n  }\r\n\r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}